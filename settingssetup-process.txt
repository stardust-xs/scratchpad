# Run password less sudo:
sudo bash -c 'echo "$(logname) ALL=(ALL:ALL) NOPASSWD: ALL" | (EDITOR="tee -a" visudo)'

# Configure bashrc:
nano ~/.bashrc

# Add the below lines:
# Custom PS1:
if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;92m\]\u@\h\[\033[00m\]:\[\033[01;94m\]\w\[\033[00m\]\n\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\n\$ '
fi
unset color_prompt force_color_prompt

# Setup virtual environments:
export WORKON_HOME=$HOME/workspace/environments
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export VIRTUALENVWRAPPER_VIRTUALENV=$HOME/.local/bin/virtualenv
source $HOME/.local/bin/virtualenvwrapper.sh

# Setup GPG key:
export GPG_TTY=$(tty)

# XAlias definitions:
# APT aliases
alias update='sudo apt-get update && sudo apt-get upgrade -y'
alias install='sudo apt-get install -y'
alias uninstall='sudo apt remove --purge -y'
alias clean='sudo apt autoremove -y && sudo apt autoclean -y && sudo apt clean -y'

# CD navigations aliases
alias ..='cd ..'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

# Common aliases
alias cls='clear'
alias df='df -h'                                # Human readable disk spaces
alias free='free -h'                            # Free RAM in human readable format
alias freem='free -m'                           # Free RAM in MB
alias freeg='free -g'                           # Free RAM in GB
alias ls='ls -lAhSpg --color=auto'              # ls -l -A (skip ./ and ../) -h (human readable sizes) -S (sort by file size) -p (add dir indicator) -g (hide owner)

# Directory navigations aliases - To be updated
alias home='cd $HOME/'
alias repo='cd ~/workshop/repositories/'

# Git aliases
alias add='git add'
alias adda='git add -A'
alias branch='git branch'
alias checkout='git checkout'
alias clone='git clone'
alias commit='git commit -m'
alias fetch='git fetch'
alias pull='git pull origin'
alias push='git push origin'
alias stat='git status'                         # 'status' is a protected name so using 'stat' instead

# Other aliases
alias brc='cat ~/.bashrc'
alias mkdir='mkdir -pv'

# Python aliases
alias py='python3'
alias pip='python3 -m pip'
alias venv='mkvirtualenv'

# Activate bashrc:
source ~/.bashrc

# Configure PPAs and repositories:
cd Downloads
wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
sudo add-apt-repository "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib"
echo 'deb https://assets.checkra.in/debian /' | sudo tee /etc/apt/sources.list.d/checkra1n.list
sudo apt-key adv --fetch-keys https://assets.checkra.in/debian/archive.key

# Update everything:
update

# Install essesntials:
install software-properties-common apt-transport-https wget transmission usb-creator-gtk baobab deja-dup cheese libreoffice-gnome libreoffice rhythmbox python3-pip python3-venv git rar p7zip-full curl gparted gnome-tweak-tool chrome-gnome-shell vlc vim code checkra1n virtualbox-6.1 dconf-editor htop

# Install virtualenv:
pip3 install virtualenv virtualenvwrapper --no-warn-script-location

# Install NVIDIA Drivers:
wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"
sudo apt-get update
wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt install ./nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt-get update
wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libnvinfer7_7.1.3-1+cuda11.0_amd64.deb
sudo apt install ./libnvinfer7_7.1.3-1+cuda11.0_amd64.deb
sudo apt-get update
sudo apt-get install --no-install-recommends cuda-11-0 libcudnn8=8.0.4.30-1+cuda11.0 libcudnn8-dev=8.0.4.30-1+cuda11.0
reboot
sudo apt-get install -y --no-install-recommends libnvinfer7=7.1.3-1+cuda11.0 libnvinfer-dev=7.1.3-1+cuda11.0 libnvinfer-plugin7=7.1.3-1+cuda11.0

# Add VBox to group:
sudo adduser $USER vboxusers

# Configure Git:
git config --global user.name 'xames3'
git config --global user.email 'xames3.developer@gmail.com'
git config --global user.signingKey SOMEKEY
git config --global commit.gpgSign true
